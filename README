--------
About
--------
write an encrypted worriedArchive to disc.
will keep track of which files already written on other disc and only write the new ones. (optional)

cd not supported. support could easily be added with a few more libburn api calls but anybody using cd is a maniac.

to decrypt and extract a disc you've made using the worriedArchive goodextract.out program:
	gpg -d /dev/sr0 | ./goodextract.out - ./destfolder

at the bottom of the file, there is a backup of all the session key packets found in the pgp file. this packet is required to decrypt a pgp file. if the start of the disc were to be corrupted, the session key and therefor the entire disk would be lost. this extra copy is to help prevent this.

---------------
-- WARNING
---------------
This software works on my machine.
to my knowledge, gpgme does not give me precise control over things like partial packet length sizes. also your key size can change the first packet's size.
different gpg defaults can cause your system to output a bigger pgp file than mine would. possibly too big to fit on the disc, runining everything.
be careful.
constant numbers giving space reserved for metadata can be found in roundFormat.h and config.h.

--------
Format of the disc image:
--------
<gpg encrypted worried archive>
<0x00> (this can be recognized because no pgp tag header can start without bit 7 set or with tag id 0.)
"ROUNDEND" (ASCII)
<uint8_t roundArchiveVersion> (latest version is defined in roundFormat.h)
<uint16_t discSetId> (only if roundArchiveVersion>=0x02)
<uint64_t discNumber>
<uint32_t: crc32 of encrypted worried archive>
uint64_t sessionKeyPacketBackupLength
(sessionKeyPacketBackupLength) bytes of sessionKeyPacketBackup

sessionKeyPacketBackup:
this is a raw copy of all packets with tags 1 or 3 found in the pgp file. They are in the order they appear in the file. the packet data is all there, so you can figure out the length of the individual packets.